{
  // Place your discord-bot-template workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "command": {
    "scope": "typescript",
    "prefix": "command",
    "body": [
      "import { ChatInputCommandInteraction, SlashCommandBuilder } from \"discord.js\"",
      "",
      "const Command = {",
      "\tenabled: true, ",
      "\tbuilder: new SlashCommandBuilder()",
      "\t\t.setName('$1')",
      "\t\t.setDescription('$2'),",
      "\thandler: async (interaction: ChatInputCommandInteraction) => {",
      "\t\t$3",
      "\t}",
      "}",
      "",
      "export default Command;"
    ]
  },
  "module": {
    "scope": "typescript",
    "prefix": "module",
    "body": [
      "import Bot from \"../../bot\";",
      "import BaseModule from \"../../loaders/base/baseModule\";",
      "import { Module } from \"../../loaders/loaderTypes\";",
      "",
      "export default class $1Module extends BaseModule implements Module {",
      "\tname = \"$1\";",
      "description = \"$2\";",
      "",
      "\t// declare other public variables here",
      "",
      "\tconstructor(bot: Bot) {",
      "\t\tsuper(bot);",
      "\t}",
      "",
      "\tasync init(bot: Bot) {",
      "",
      "\t\t// init code here, this is called when the module is loaded",
      "",
      "\t}",
      "",
      "}"
    ]
  }
}
